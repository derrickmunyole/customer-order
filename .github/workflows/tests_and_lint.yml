---
name: tests and lint

on: [push]

jobs:
  test-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      
      - name: Test with Coverage
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
          AFRICASTALKING_USERNAME: ${{ secrets.AFRICAS_TALKING_USERNAME }}
          AFRICASTALKING_API_KEY: ${{ secrets.AFRICAS_TALKING_API_KEY }}
        run: |
          mkdir -p ./cov
          docker compose run --rm \
            -e DB_HOST -e DB_NAME -e DB_USER -e DB_PASS \
            -e DJANGO_SECRET_KEY -e DJANGO_ALLOWED_HOSTS \
            -e AFRICASTALKING_USERNAME -e AFRICASTALKING_API_KEY \
            app sh -c "
              mkdir -p /app/cov && 
              chmod 777 /app/cov &&
              su django-user -c 'python manage.py wait_for_db && 
              python manage.py test'"

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./cov/coverage.xml

      - name: Lint
        run: docker compose run --rm app sh -c "flake8"

      - name: Install security scanning tools
        run: |
          pip install bandit safety
      
      - name: Run security scans
        env:
          SAFETY_API_KEY: ${{secrets.SAFETY_API_KEY}}
        run: |
          bandit -r ./app -ll  # Scan source code for security issues
          safety scan  --key $SAFETY_API_KEY   # Scan dependencies for known vulnerabilities
      
